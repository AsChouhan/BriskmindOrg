public with sharing class AudienceWrapper {
    
	//public String id;
	public String audienceId;
	public String name;
	public UsageLiteWrapper usage;
	public Integer audienceCount;
	public SegmentLiteWrapper segment;
	public String segmentId;
	public String createdAt;
	public String modifiedAt;
	public Boolean isDeleted;
	public PeopleLiteWrapper createdBy;
	public PeopleLiteWrapper modifiedBy;
	public List<AudienceCondition> listOfConditions;
	public List<PeopleLiteWrapper> listOfPeople;
	public List<FileContentWrapper> listOfFiles;
    public String type;
    public List<ADGroup> listOfActiveDirectoryGroups;
	public Boolean isCreatedFromADGroups; 
	public Boolean isCreatedByAudienceCsv;
	public String status;
	public Boolean isAutoGenerated;

	public class AudienceCondition {
		public String name;
		public String label;
		public Set<String> conditionSet;
		public List<AudienceConditionValue> values;
	}
	
	public class AudienceConditionValue {
		public String id;
		public String name;
		
		public AudienceConditionValue() {
			this.id = null;
			this.name = '';
		}

		public Boolean equals(Object obj) {
			if (obj != null && obj instanceof AudienceConditionValue) {
				AudienceConditionValue otherAudienceConditionValue = (AudienceConditionValue) obj;
				return (id == otherAudienceConditionValue.id && name == otherAudienceConditionValue.name);
			} else {
				return false;
			}
		}

		public override Integer hashCode() {
			return (id + name).hashCode();
		}
	}
	
	public class ProfileFields {
        public String name;
		public String columnName;
        public Boolean isHtml;
        public Boolean isUserEditable;
        public Boolean isUserDisplay;
        public Boolean isCustom;
		public Boolean isSync;
		public String maxLength;
        
		public ProfileFields(String name, String columnName, Boolean isHtml, Boolean isUserEditable, Boolean isUserDisplay, Boolean isSync, Boolean isCustom) {
			this.name = name;
			this.columnName = columnName;
			this.isHtml = isHtml;
			this.isUserEditable = isUserEditable;
			this.isUserDisplay = isUserDisplay;
			this.isSync = isSync;
			this.isCustom = isCustom;
        }
    }

	public class PaginationWrapper{
		public String nextPageToken;
		public Integer totalRecords;
    	public List<AudienceWrapper> listOfItems = new List<AudienceWrapper>();
	}

	public class SegmentLiteWrapper {
		public String id;
		public String segmentId;
		public String name;
	}

	public class UsageLiteWrapper {
		public Integer subscriptionCount;
		public Integer newsletterCount;
		public Integer alertCount;
		public Integer socialCampaignCount;
    }
    
    public class ADGroup {
        public String id; 
        public String name; 
        public String email; 
        public String label;
        public List<String> groupTypes;
        public Boolean isSelected;
    }
}